name: CICD

on:
  push:
    
env:
    GITHUB_TOKEN: ${{ secrets.TOKEN }}

jobs:
  test-e2e-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - name: Install dependencies
      run: npm i
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Package the project
      run: |
        npm run install_microservices
        npm run build_microservices
        npm run build:browser
        npm run unpacked
    - name: Set screen resolution & run e2e tests
      run: |
        sudo chown root:root ./release/0.0.0/linux-unpacked/chrome-sandbox
        sudo chmod 4755 ./release/0.0.0/linux-unpacked/chrome-sandbox
        xvfb-run -n 99 --server-args="-screen 0 1280x960x24" npm run test:e2e:browser
        xvfb-run -n 99 --server-args="-screen 0 1280x960x24" npm run test:e2e:desktop
      env:
        DISPLAY: ":99"
        DEBUG: "pw:browser"
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report-linux
        path: playwright-report/
        retention-days: 5

  test-e2e-windows:
    runs-on: windows-latest
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - name: Install dependencies
      run: npm i
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Package the project
      run: |
        dotnet tool install --global AzureSignTool --version 4.0.1
        npm run install_microservices
        npm run build_microservices
        npm run build:browser
        npm run unpacked
      shell: bash
      env:
        AZURE_KEY_VAULT_URI: ${{ secrets.AZURE_KEY_VAULT_URI }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_CERT_NAME: ${{ secrets.AZURE_CERT_NAME }}
    - name: Run e2e tests
      run: |
        npm run test:e2e:browser
        npm run test:e2e:desktop
      shell: bash
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report-windows
        path: playwright-report/
        retention-days: 5
  semantic:
    runs-on: ubuntu-latest
    needs: [test-e2e-linux, test-e2e-windows]
    outputs:
      new_release: ${{ steps.semantic.outputs.new_release_published }}
      version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  release:
    runs-on: ${{ matrix.os }}
    needs: [semantic]
    if: needs.semantic.outputs.new_release == 'true'
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Package
        run: |
          dotnet tool install --global AzureSignTool --version 4.0.1
          jq '.version = "${{ needs.semantic.outputs.version }}"' package.json > temp && mv temp package.json
          cat package.json
          rm -rf node_modules package-lock.json
          npm install
          npm run install_microservices
          npm run build_microservices
          npm run package
        shell: bash
        env:
          AZURE_KEY_VAULT_URI: ${{ secrets.AZURE_KEY_VAULT_URI }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_CERT_NAME: ${{ secrets.AZURE_CERT_NAME }}
      - name: Release
        run: |
          cd release/${{ needs.semantic.outputs.version }}
          gh release upload v${{ needs.semantic.outputs.version }} vease* latest* --clobber
        shell: bash

  merge:
    runs-on: ubuntu-latest
    needs: [release]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Merge master -> next
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: master
          target_branch: next
          github_token: ${{ secrets.TOKEN }}
